@model User;

<div class="container">

    <div class="my-3">
        <h2>Sign-up</h2>
    </div>

    <form method="post"
          asp-controller="User"
          asp-action="CreateUser">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="col-md-4 mb-3 form-floating">
            <input asp-for="UserId" class="form-control"
                   placeholder="UserId" />
            <label asp-for="UserId">User Id</label>
            <span asp-validation-for="UserId" class="text-danger"></span>
        </div>

        <div class="col-md-5 mb-3 form-floating">
            <input asp-for="FullName" class="form-control"
                   placeholder="FullName" />
            <label asp-for="FullName">Full Name</label>
            <span asp-validation-for="FullName" class="text-danger"></span>
        </div>

        <div class="col-md-5 mb-3 form-floating">
            <input asp-for="UserPw" class="form-control"
                   placeholder="UserPw" />
            <label asp-for="UserPw">Password</label>
            <span asp-validation-for="UserPw" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

        @if (ViewData["Message"] != null)
        {
            <div class="form-group row">
                <div class="col-6">
                    <div class="alert alert-@ViewData["MsgType"]">
                        <b>Message: </b>@ViewData["Message"]<br />
                        @if (!String.IsNullOrEmpty(ViewData["ExecSQL"]?.ToString()))
                        {
                            <b>SQL: </b>

                            @ViewData["ExecSQL"]?.ToString()
                        }
                    </div>
                </div>
            </div>
        }
    </form>
</div>